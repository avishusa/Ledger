// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Ledger {
  id          Int      @id @default(autoincrement())
  date        DateTime
  merchant    String
  amount      Float
  description String?
  receiptUrl  String?
  createdAt   DateTime @default(now())
  category    String?  
  ingestLogs  IngestLog[]
  paymentMethod String? 
}

model BankStatement {
  id            Int      @id @default(autoincrement())
  date          DateTime
  merchant      String
  amount        Float
  description   String?
  paymentMethod String?    // 
  category      String?    // 
  createdAt     DateTime @default(now())
}

model User {
  id             String   @id @default(cuid())
  name           String?
  email          String   @unique
  emailVerified  DateTime?
  password       String?       // <--- Make this OPTIONAL (add ?)
  image          String?
  accounts       Account[]
  sessions       Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}


model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model IngestLog {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  status      String
  message     String?
  fileName    String?
  ledgerId    Int?
  ledger      Ledger?  @relation(fields: [ledgerId], references: [id])
}